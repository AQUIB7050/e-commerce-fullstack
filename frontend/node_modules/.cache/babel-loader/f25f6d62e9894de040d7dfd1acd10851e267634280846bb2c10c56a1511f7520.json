{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../../config/apiConfig\";\nimport { GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\nconst token = localStorage.getItem(\"jwt\");\nconst registerRequest = () => ({\n  type: REGISTER_REQUEST\n});\nconst registerSuccess = user => ({\n  type: REGISTER_SUCCESS,\n  payload: user\n});\nconst registerFailue = error => ({\n  type: REGISTER_FAILURE,\n  payload: error\n});\nexport const register = userData => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/signup`, userData);\n    const user = response.data;\n    if (user.jwt) {\n      localStorage.setIten(\"jwt\", user.jwt);\n    }\n    console.log(\"user\", user);\n    dispatch(registerSuccess(user.jwt));\n  } catch (error) {\n    dispatch(registerFailue(error.message));\n  }\n};\nconst loginRequest = () => ({\n  type: LOGIN_REQUEST\n});\nconst loginSuccess = user => ({\n  type: LOGIN_SUCCESS,\n  payload: user\n});\nconst loginFailue = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const login = userData => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.get(`${API_BASE_URL}/auth/signin`, userData);\n    const user = response.data;\n    if (user.jwt) {\n      localStorage.setIten(\"jwt\", user.jwt);\n    }\n    console.log(\"user\", user);\n    dispatch(loginSuccess(user.jwt));\n  } catch (error) {\n    dispatch(loginFailue(error.message));\n  }\n};\nconst getUserRequest = () => ({\n  type: GET_USER_REQUEST\n});\nconst getUserSuccess = user => ({\n  type: GET_USER_SUCCESS,\n  payload: user\n});\nconst getUserFailue = error => ({\n  type: GET_USER_FAILURE,\n  payload: error\n});\nexport const getUser = jwt => async dispatch => {\n  dispatch(getUserRequest());\n  try {\n    const response = await axios.get(`${API_BASE_URL}/api/users/profile`, {\n      headers: {\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    });\n    const user = response.data;\n    console.log(\"user\", user);\n    dispatch(getUserSuccess(user));\n  } catch (error) {\n    dispatch(getUserFailue(error.message));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT,\n    payload: null\n  });\n};","map":{"version":3,"names":["axios","API_BASE_URL","GET_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","token","localStorage","getItem","registerRequest","type","registerSuccess","user","payload","registerFailue","error","register","userData","dispatch","response","post","data","jwt","setIten","console","log","message","loginRequest","loginSuccess","loginFailue","login","get","getUserRequest","getUserSuccess","getUserFailue","getUser","headers","logout"],"sources":["/Users/aquibahmed/Desktop/e-commerece/src/State/Auth/Action.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_BASE_URL } from \"../../config/apiConfig\";\nimport { GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\n\nconst token = localStorage.getItem(\"jwt\");\nconst registerRequest = () => ({type:REGISTER_REQUEST});\nconst registerSuccess = (user) => ({type:REGISTER_SUCCESS,payload:user});\nconst registerFailue = (error) => ({type:REGISTER_FAILURE,payload:error});\n\nexport const register = (userData) => async (dispatch) => {\n    dispatch(registerRequest());\n    try{\n        const response = await axios.post(`${API_BASE_URL}/auth/signup`, userData);\n        const user = response.data;\n        if(user.jwt){\n            localStorage.setIten(\"jwt\", user.jwt);\n        }\n        console.log(\"user\", user);\n\n        dispatch(registerSuccess(user.jwt));\n    } catch (error){\n        dispatch(registerFailue(error.message));\n    }\n}\n\nconst loginRequest = () => ({type:LOGIN_REQUEST});\nconst loginSuccess = (user) => ({type:LOGIN_SUCCESS,payload:user});\nconst loginFailue = (error) => ({type:LOGIN_FAILURE,payload:error});\n\nexport const login = userData => async (dispatch) => {\n    dispatch(loginRequest());\n    try{\n        const response = await axios.get(`${API_BASE_URL}/auth/signin`, userData);\n        const user = response.data;\n        if(user.jwt){\n            localStorage.setIten(\"jwt\", user.jwt);\n        }\n        console.log(\"user\", user);\n\n        dispatch(loginSuccess(user.jwt));\n    } catch (error){\n        dispatch(loginFailue(error.message));\n    }\n}\n\n\nconst getUserRequest = () => ({type:GET_USER_REQUEST});\nconst getUserSuccess = (user) => ({type:GET_USER_SUCCESS,payload:user});\nconst getUserFailue = (error) => ({type:GET_USER_FAILURE,payload:error});\n\n\nexport const getUser = (jwt) => async (dispatch) => {\n    dispatch(getUserRequest());\n    try{\n        const response = await axios.get(`${API_BASE_URL}/api/users/profile`,{\n            headers:{\n                \"Authorization\":`Bearer ${jwt}`\n            }\n        });\n        const user = response.data;\n        console.log(\"user\", user);\n\n        dispatch(getUserSuccess(user));\n    } catch (error){\n        dispatch(getUserFailue(error.message));\n    }\n}\n\nexport const logout= () => (dispatch) => {\n    dispatch({type:LOGOUT, payload:null});\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}